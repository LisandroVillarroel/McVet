{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@app/servicios/doctor-solicitante.service\";\nimport * as i3 from \"@app/servicios/cliente.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/material/select\";\nimport * as i9 from \"@angular/material/button\";\nimport * as i10 from \"@angular/material/core\";\n\nfunction ModificaDoctorSolicitanteComponent_mat_error_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.getErrorMessage(\"nombre\"));\n  }\n}\n\nfunction ModificaDoctorSolicitanteComponent_mat_option_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const _cliente_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", _cliente_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", _cliente_r3.nombreFantasia, \" \");\n  }\n}\n\nfunction ModificaDoctorSolicitanteComponent_mat_error_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r2.getErrorMessage(\"idCliente\"));\n  }\n}\n\nexport let ModificaDoctorSolicitanteComponent = /*#__PURE__*/(() => {\n  class ModificaDoctorSolicitanteComponent {\n    constructor(dialogRef, data, doctorSolicitanteService, clienteService) {\n      this.dialogRef = dialogRef;\n      this.data = data;\n      this.doctorSolicitanteService = doctorSolicitanteService;\n      this.clienteService = clienteService;\n      this.nombre = new FormControl(this.data.nombre, [Validators.required]);\n      this.idCliente = new FormControl(this.data.cliente.idCliente, [Validators.required]);\n      this.modificaDoctorSolicitante = new FormGroup({\n        nombre: this.nombre,\n        idCliente: this.idCliente\n      });\n      this.cargaCliente();\n      console.log('dato update: ', data);\n    }\n\n    getErrorMessage(campo) {\n      if (campo === 'nombre') {\n        return this.nombre.hasError('required') ? 'Debes ingresar Nombre' : '';\n      }\n\n      if (campo === 'idCliente') {\n        return this.idCliente.hasError('required') ? 'Debes Seleccionar Cliente' : '';\n      }\n\n      return '';\n    }\n\n    ngOnInit() {}\n\n    cargaCliente() {\n      this.clienteService.getDataCliente().subscribe(res => {\n        console.log('cliente:', res['data']);\n        this.datoCliente = res['data'];\n      }, // console.log('yo:', res as PerfilI[]),\n      error => {\n        console.log('error carga:', error);\n        Swal.fire('ERROR INESPERADO', error, 'error');\n      }); // (this.dataSource.data = res as PerfilI[])\n    }\n\n    enviar() {\n      this.cliente = {\n        idCliente: this.modificaDoctorSolicitante.get('idCliente').value._id,\n        nombreFantasia: this.modificaDoctorSolicitante.get('idCliente').value.nombreFantasia\n      };\n      this.dato = {\n        _id: this.data._id,\n        nombre: this.modificaDoctorSolicitante.get('nombre').value,\n        cliente: this.cliente,\n        usuarioModifica_id: this.data.usuarioModifica_ido\n      };\n      console.log('modifica:', this.dato);\n      this.doctorSolicitanteService.putDataDoctorSolicitante(this.dato).subscribe(dato => {\n        console.log('respuesta:', dato['codigo']);\n\n        if (dato['codigo'] === 200) {\n          Swal.fire('Ya se grabó con Éxito', 'Click en Botón!', 'success'), this.dialogRef.close(1);\n        } else {\n          if (dato.codigo != 500) {\n            Swal.fire(dato.mensaje, '', 'error');\n          } else {\n            console.log('Error Doctor Solicitante:', dato);\n            Swal.fire('', 'ERROR SISTEMA', 'error');\n          }\n        }\n      } // error =>{console.log('error agrega:',<any>error);this.errorMsg=error.error.error;alert('Error: ' + this.errorMsg)}\n      ); // this.dialogRef.close(this.form.value);\n      // console.log(this.datoCotiza);\n    } // Error handling\n\n\n    cerrar() {\n      this.dialogRef.close();\n    }\n\n    comparaSelecciona(v1, v2) {\n      return compareFn(v1, v2);\n    }\n\n  }\n\n  ModificaDoctorSolicitanteComponent.ɵfac = function ModificaDoctorSolicitanteComponent_Factory(t) {\n    return new (t || ModificaDoctorSolicitanteComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i2.DoctorSolicitanteService), i0.ɵɵdirectiveInject(i3.ClienteService));\n  };\n\n  ModificaDoctorSolicitanteComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ModificaDoctorSolicitanteComponent,\n    selectors: [[\"app-modifica-doctor-solicitante\"]],\n    decls: 17,\n    vars: 9,\n    consts: [[\"mat-dialog-title\", \"\"], [\"name\", \"modifica\", 1, \"modifica-container\", 3, \"formGroup\"], [\"matInput\", \"\", \"placeholder\", \"Ingrese Nombre\", \"required\", \"\", 3, \"formControl\"], [4, \"ngIf\"], [\"placeholder\", \"Seleccione Cliente\", \"required\", \"\", 3, \"formControl\", \"compareWith\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-md-6\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", \"mat-dialog-close\", \"\", 3, \"disabled\", \"click\"], [\"mat-raised-button\", \"\", 1, \"colorFondoBoton\", 3, \"disabled\", \"click\"], [3, \"value\"]],\n    template: function ModificaDoctorSolicitanteComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h2\", 0);\n        i0.ɵɵtext(1, \"MODIFICA ESPECIE\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"mat-dialog-content\", 1);\n        i0.ɵɵelementStart(3, \"mat-form-field\");\n        i0.ɵɵelement(4, \"input\", 2);\n        i0.ɵɵtemplate(5, ModificaDoctorSolicitanteComponent_mat_error_5_Template, 2, 1, \"mat-error\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"mat-form-field\");\n        i0.ɵɵelementStart(7, \"mat-select\", 4);\n        i0.ɵɵtemplate(8, ModificaDoctorSolicitanteComponent_mat_option_8_Template, 2, 2, \"mat-option\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(9, ModificaDoctorSolicitanteComponent_mat_error_9_Template, 2, 1, \"mat-error\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"mat-dialog-actions\");\n        i0.ɵɵelementStart(11, \"div\", 6);\n        i0.ɵɵelementStart(12, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function ModificaDoctorSolicitanteComponent_Template_button_click_12_listener() {\n          return ctx.cerrar();\n        });\n        i0.ɵɵtext(13, \"Cerrar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 6);\n        i0.ɵɵelementStart(15, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function ModificaDoctorSolicitanteComponent_Template_button_click_15_listener() {\n          return ctx.enviar();\n        });\n        i0.ɵɵtext(16, \"ACEPTAR\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.modificaDoctorSolicitante);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formControl\", ctx.nombre);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.nombre.invalid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formControl\", ctx.idCliente)(\"compareWith\", ctx.comparaSelecciona);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.datoCliente);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.idCliente.invalid);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", false);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", ctx.modificaDoctorSolicitante.invalid);\n      }\n    },\n    directives: [i1.MatDialogTitle, i1.MatDialogContent, i4.NgControlStatusGroup, i4.FormGroupDirective, i5.MatFormField, i6.MatInput, i4.DefaultValueAccessor, i4.RequiredValidator, i4.NgControlStatus, i4.FormControlDirective, i7.NgIf, i8.MatSelect, i7.NgForOf, i1.MatDialogActions, i9.MatButton, i1.MatDialogClose, i5.MatError, i10.MatOption],\n    styles: [\".modifica-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;padding:0 10%}.modifica-container[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{width:95%}.colorFondoBoton[_ngcontent-%COMP%]{color:#fff;background-color:#000}.mat-raised-button[_ngcontent-%COMP%]{min-width:100%}.mat-dialog-container[_ngcontent-%COMP%]{padding:50px!important}.mat-dialog-content[_ngcontent-%COMP%]{margin:auto}\"]\n  });\n  return ModificaDoctorSolicitanteComponent;\n})();\n\nfunction compareFn(v1, v2) {\n  return v1 && v2 ? v1.value === v2.value : v1 === v2;\n}","map":null,"metadata":{},"sourceType":"module"}