{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatDialogConfig } from '@angular/material/dialog';\nimport * as _ from 'lodash';\nimport Swal from 'sweetalert2';\nimport { AgregaDoctorSolicitanteComponent } from './agrega-doctor-solicitante/agrega-doctor-solicitante.component';\nimport { ModificaDoctorSolicitanteComponent } from './modifica-doctor-solicitante/modifica-doctor-solicitante.component';\nimport { ConsultaDoctorSolicitanteComponent } from './consulta-doctor-solicitante/consulta-doctor-solicitante.component';\nimport { EliminaDoctorSolicitanteComponent } from './elimina-doctor-solicitante/elimina-doctor-solicitante.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@app/servicios/doctor-solicitante.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"../../../autentica/_services\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/input\";\nimport * as i7 from \"@angular/material/table\";\nimport * as i8 from \"@angular/material/sort\";\nimport * as i9 from \"@angular/material/paginator\";\nimport * as i10 from \"@angular/material/button\";\nimport * as i11 from \"@angular/material/icon\";\n\nfunction DoctorSolicitanteComponent_th_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 21);\n    i0.ɵɵtext(1, \" N\\u00B0 \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction DoctorSolicitanteComponent_td_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const i_r11 = ctx.dataIndex;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i_r11 + 1, \" \");\n  }\n}\n\nfunction DoctorSolicitanteComponent_th_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 23);\n    i0.ɵɵtext(1, \" NOMBRE SOLICITANTE\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction DoctorSolicitanteComponent_td_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r12 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", row_r12.nombre, \" \");\n  }\n}\n\nfunction DoctorSolicitanteComponent_th_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 25);\n    i0.ɵɵtext(1, \" NOMBRE CLIENTE\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction DoctorSolicitanteComponent_td_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const row_r13 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", row_r13.cliente.nombreFantasia, \" \");\n  }\n}\n\nfunction DoctorSolicitanteComponent_th_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"th\", 26);\n    i0.ɵɵelementStart(1, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function DoctorSolicitanteComponent_th_19_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.agregaNuevo();\n    });\n    i0.ɵɵelementStart(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"add\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction DoctorSolicitanteComponent_td_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 28);\n    i0.ɵɵelementStart(1, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function DoctorSolicitanteComponent_td_20_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const row_r16 = restoredCtx.$implicit;\n      const ctx_r18 = i0.ɵɵnextContext();\n      return ctx_r18.actualizaDoctorSolicitante(row_r16._id, row_r16.nombre, row_r16.cliente.IdCliente, row_r16.cliente.nombreFantasia);\n    });\n    i0.ɵɵelementStart(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function DoctorSolicitanteComponent_td_20_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const row_r16 = restoredCtx.$implicit;\n      const ctx_r20 = i0.ɵɵnextContext();\n      return ctx_r20.consultaDoctorSolicitante(row_r16._id, row_r16.nombre, row_r16.cliente.IdCliente, row_r16.cliente.nombreFantasia);\n    });\n    i0.ɵɵelementStart(5, \"mat-icon\");\n    i0.ɵɵtext(6, \"search\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"button\", 30);\n    i0.ɵɵlistener(\"click\", function DoctorSolicitanteComponent_td_20_Template_button_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const row_r16 = restoredCtx.$implicit;\n      const ctx_r21 = i0.ɵɵnextContext();\n      return ctx_r21.eliminaDoctorSolicitante(row_r16._id, row_r16.nombre, row_r16.cliente.IdCliente, row_r16.cliente.nombreFantasia);\n    });\n    i0.ɵɵelementStart(8, \"mat-icon\");\n    i0.ɵɵtext(9, \"delete\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction DoctorSolicitanteComponent_tr_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 31);\n  }\n}\n\nfunction DoctorSolicitanteComponent_tr_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 32);\n  }\n}\n\nconst _c0 = function () {\n  return [10, 20, 30, 100];\n};\n\nexport let DoctorSolicitanteComponent = /*#__PURE__*/(() => {\n  class DoctorSolicitanteComponent {\n    constructor(doctorSolicitanteService, httpClient, dialog, authenticationService) {\n      this.doctorSolicitanteService = doctorSolicitanteService;\n      this.httpClient = httpClient;\n      this.dialog = dialog;\n      this.authenticationService = authenticationService; // tslint:disable-next-line:max-line-length\n\n      this.displayedColumns = ['index', 'nombre', 'cliente:{nombreFantasia}', 'opciones'];\n      this.authenticationService.currentUsuario.subscribe(x => this.currentUsuario = x);\n      this.dataSource = new MatTableDataSource(); // Permite fintrar en nodos o sub campos\n\n      this.dataSource.filterPredicate = (data, filter) => {\n        const dataStr = JSON.stringify(data).toLowerCase();\n        return dataStr.indexOf(filter) != -1;\n      };\n    }\n\n    ngOnInit() {\n      return __awaiter(this, void 0, void 0, function* () {\n        console.log('pasa emp 1');\n\n        if (this.authenticationService.getCurrentUser() != null) {\n          this.currentUsuario.usuarioDato = this.authenticationService.getCurrentUser();\n        }\n\n        yield this.getListDoctorSolicitante(); // Permite ordenar cuando es estructura anidada\n\n        this.dataSource.sortingDataAccessor = (item, property) => {\n          switch (property) {\n            case 'cliente:{nombreFantasia}':\n              return item.cliente.nombreFantasia;\n\n            default:\n              return item[property];\n          }\n        };\n\n        this.dataSource.sort = this.sort;\n      });\n    }\n\n    getListDoctorSolicitante() {\n      console.log('pasa solicitante 2');\n      this.doctorSolicitanteService.getDataDoctorSolicitante().subscribe(res => {\n        console.log('Doctor: ', res['data']);\n        this.dataSource.data = res['data'];\n      }, // console.log('yo:', res as PerfilI[]),\n      error => {\n        console.log('error carga:', error);\n        Swal.fire('ERROR INESPERADO', error.error.error, 'error');\n      }); // (this.dataSource.data = res as PerfilI[])\n    } // tslint:disable-next-line: use-lifecycle-interface\n\n\n    ngAfterViewInit() {\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n      this.dataSource.sortingDataAccessor = _.get;\n    }\n\n    applyFilter(filterValue) {\n      this.dataSource.filter = filterValue.trim().toLowerCase();\n\n      if (this.dataSource.paginator) {\n        this.dataSource.paginator.firstPage();\n      }\n    }\n\n    agregaNuevo() {\n      //  agregaNuevo(empresaInterface_: EmpresaI) {\n      // Nuevo\n      console.log('usu:', this.currentUsuario.usuarioDato._id);\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = '50%';\n      dialogConfig.height = '70%';\n      dialogConfig.position = {\n        top: '5%'\n      };\n      dialogConfig.data = {\n        usuario: this.currentUsuario.usuarioDato._id\n      }; //  dialogConfig.data = {\n      //    idProducto: idProdP,\n      //    titulo: tituloP\n      //  };\n\n      this.dialog.open(AgregaDoctorSolicitanteComponent, dialogConfig).afterClosed().subscribe(data => {\n        console.log('Dialog output3333:', data);\n\n        if (data !== undefined) {\n          this.refreshTable();\n        }\n      });\n    }\n\n    actualizaDoctorSolicitante(id, nombre, idCliente, nombreFantasia) {\n      this.datoDoctorSolicitantePar = {\n        _id: id,\n        cliente: {\n          idCliente: idCliente,\n          nombreFantasia: nombreFantasia\n        },\n        nombre,\n        usuarioCrea_id: this.currentUsuario.usuarioDato._id,\n        usuarioModifica_id: this.currentUsuario.usuarioDato._id\n      };\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = '50%';\n      dialogConfig.height = '70%';\n      dialogConfig.position = {\n        top: '5%'\n      }; // dialogConfig.data =\n      // {id, rutEmpresa, razonSocial, nombreFantasia, direccion, usuarioCrea_id: this.currentUsuario.usuarioDato.usuario};\n\n      dialogConfig.data = this.datoDoctorSolicitantePar;\n      this.dialog.open(ModificaDoctorSolicitanteComponent, dialogConfig).afterClosed().subscribe(data => {\n        console.log('Dialog output3333:', data);\n\n        if (data !== undefined) {\n          this.refreshTable();\n        }\n      });\n    }\n\n    consultaDoctorSolicitante(id, nombre, idCliente, nombreFantasia) {\n      this.datoDoctorSolicitantePar = {\n        _id: id,\n        cliente: {\n          idCliente: idCliente,\n          nombreFantasia: nombreFantasia\n        },\n        nombre,\n        usuarioCrea_id: this.currentUsuario.usuarioDato._id,\n        usuarioModifica_id: this.currentUsuario.usuarioDato._id\n      };\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = '50%';\n      dialogConfig.height = '70%';\n      dialogConfig.position = {\n        top: '5%'\n      };\n      dialogConfig.data = this.datoDoctorSolicitantePar;\n      this.dialog.open(ConsultaDoctorSolicitanteComponent, dialogConfig).afterClosed().subscribe(data => {\n        console.log('Datoas Consulta:', data);\n\n        if (data !== undefined) {\n          this.refreshTable();\n        }\n      });\n    }\n\n    eliminaDoctorSolicitante(id, nombre, idCliente, nombreFantasia) {\n      this.datoDoctorSolicitantePar = {\n        _id: id,\n        cliente: {\n          idCliente: idCliente,\n          nombreFantasia: nombreFantasia\n        },\n        nombre,\n        usuarioModifica_id: this.currentUsuario.usuarioDato._id\n      };\n      const dialogConfig = new MatDialogConfig();\n      dialogConfig.disableClose = true;\n      dialogConfig.autoFocus = true;\n      dialogConfig.width = '50%';\n      dialogConfig.height = '70%';\n      dialogConfig.position = {\n        top: '5%'\n      };\n      dialogConfig.data = this.datoDoctorSolicitantePar;\n      this.dialog.open(EliminaDoctorSolicitanteComponent, dialogConfig).afterClosed().subscribe(data => {\n        console.log('Datoas Consulta:', data);\n\n        if (data !== undefined) {\n          this.refreshTable();\n        }\n      });\n    }\n\n    refreshTable() {\n      return __awaiter(this, void 0, void 0, function* () {\n        // Refreshing table using paginator\n        // Thanks yeager-j for tips\n        // https://github.com/marinantonio/angular-mat-table-crud/issues/12\n        // this.dataSource.paginator._changePageSize(this.paginator.pageSize);\n        // this.noticia=this.servicio.getNoticias();\n        const respuesta = yield this.getListDoctorSolicitante();\n\n        this.dataSource.paginator._changePageSize(this.paginator.pageSize);\n      });\n    }\n\n    comparaSelecciona(v1, v2) {\n      return compareFn(v1, v2);\n    }\n\n  }\n\n  DoctorSolicitanteComponent.ɵfac = function DoctorSolicitanteComponent_Factory(t) {\n    return new (t || DoctorSolicitanteComponent)(i0.ɵɵdirectiveInject(i1.DoctorSolicitanteService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.MatDialog), i0.ɵɵdirectiveInject(i4.AuthenticationService));\n  };\n\n  DoctorSolicitanteComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DoctorSolicitanteComponent,\n    selectors: [[\"app-doctor-solicitante\"]],\n    viewQuery: function DoctorSolicitanteComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatPaginator, 5);\n        i0.ɵɵviewQuery(MatSort, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n      }\n    },\n    decls: 24,\n    vars: 5,\n    consts: [[1, \"pt-1\"], [1, \"col-md-12\"], [1, \"text-center\"], [1, \"content\", \"ml-2\", \"mr-2\"], [\"matInput\", \"\", \"placeholder\", \"Buscar\", 3, \"keyup\"], [1, \"mat-elevation-z8\"], [\"mat-table\", \"\", \"multiTemplateDataRows\", \"\", \"matSort\", \"\", 3, \"dataSource\"], [\"matColumnDef\", \"index\"], [\"id\", \"indexI\", \"mat-header-cell\", \"\", \"mat-sort-header\", \"\", \"style\", \" width: 3%;\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", \"style\", \" width: 3%;\", 4, \"matCellDef\"], [\"matColumnDef\", \"nombre\"], [\"id\", \"nombreI\", \"mat-header-cell\", \"\", \"mat-sort-header\", \"\", \"style\", \" width: 41%;\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", \"style\", \" width: 41%;\", 4, \"matCellDef\"], [\"matColumnDef\", \"cliente:{nombreFantasia}\"], [\"id\", \"nombreFantasiaI\", \"mat-header-cell\", \"\", \"mat-sort-header\", \"\", \"style\", \" width: 41%;\", 4, \"matHeaderCellDef\"], [\"matColumnDef\", \"opciones\"], [\"id\", \"opcionesI\", \"mat-header-cell\", \"\", \"style\", \" width: 15%; text-align: center\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", \"style\", \" width: 15%; text-align: center\", 4, \"matCellDef\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [3, \"pageSizeOptions\"], [\"id\", \"indexI\", \"mat-header-cell\", \"\", \"mat-sort-header\", \"\", 2, \"width\", \"3%\"], [\"mat-cell\", \"\", 2, \"width\", \"3%\"], [\"id\", \"nombreI\", \"mat-header-cell\", \"\", \"mat-sort-header\", \"\", 2, \"width\", \"41%\"], [\"mat-cell\", \"\", 2, \"width\", \"41%\"], [\"id\", \"nombreFantasiaI\", \"mat-header-cell\", \"\", \"mat-sort-header\", \"\", 2, \"width\", \"41%\"], [\"id\", \"opcionesI\", \"mat-header-cell\", \"\", 2, \"width\", \"15%\", \"text-align\", \"center\"], [\"mat-icon-button\", \"\", \"color\", \"accent\", 1, \"nuevo\", 3, \"click\"], [\"mat-cell\", \"\", 2, \"width\", \"15%\", \"text-align\", \"center\"], [\"mat-icon-button\", \"\", \"color\", \"accent\", 2, \"size\", \"5px\", 3, \"click\"], [\"mat-icon-button\", \"\", \"color\", \"accent\", 3, \"click\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"]],\n    template: function DoctorSolicitanteComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"h4\", 2);\n        i0.ɵɵtext(3, \"Mantenedor Doctor Solicitante\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵelementStart(5, \"mat-form-field\");\n        i0.ɵɵelementStart(6, \"input\", 4);\n        i0.ɵɵlistener(\"keyup\", function DoctorSolicitanteComponent_Template_input_keyup_6_listener($event) {\n          return ctx.applyFilter($event.target.value);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 5);\n        i0.ɵɵelementStart(8, \"table\", 6);\n        i0.ɵɵelementContainerStart(9, 7);\n        i0.ɵɵtemplate(10, DoctorSolicitanteComponent_th_10_Template, 2, 0, \"th\", 8);\n        i0.ɵɵtemplate(11, DoctorSolicitanteComponent_td_11_Template, 2, 1, \"td\", 9);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(12, 10);\n        i0.ɵɵtemplate(13, DoctorSolicitanteComponent_th_13_Template, 2, 0, \"th\", 11);\n        i0.ɵɵtemplate(14, DoctorSolicitanteComponent_td_14_Template, 2, 1, \"td\", 12);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(15, 13);\n        i0.ɵɵtemplate(16, DoctorSolicitanteComponent_th_16_Template, 2, 0, \"th\", 14);\n        i0.ɵɵtemplate(17, DoctorSolicitanteComponent_td_17_Template, 2, 1, \"td\", 12);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(18, 15);\n        i0.ɵɵtemplate(19, DoctorSolicitanteComponent_th_19_Template, 4, 0, \"th\", 16);\n        i0.ɵɵtemplate(20, DoctorSolicitanteComponent_td_20_Template, 10, 0, \"td\", 17);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵtemplate(21, DoctorSolicitanteComponent_tr_21_Template, 1, 0, \"tr\", 18);\n        i0.ɵɵtemplate(22, DoctorSolicitanteComponent_tr_22_Template, 1, 0, \"tr\", 19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"mat-paginator\", 20);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"dataSource\", ctx.dataSource);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"pageSizeOptions\", i0.ɵɵpureFunction0(4, _c0));\n      }\n    },\n    directives: [i5.MatFormField, i6.MatInput, i7.MatTable, i8.MatSort, i7.MatColumnDef, i7.MatHeaderCellDef, i7.MatCellDef, i7.MatHeaderRowDef, i7.MatRowDef, i9.MatPaginator, i7.MatHeaderCell, i8.MatSortHeader, i7.MatCell, i10.MatButton, i11.MatIcon, i7.MatHeaderRow, i7.MatRow],\n    styles: [\"table[_ngcontent-%COMP%]{width:100%}.mat-form-field[_ngcontent-%COMP%]{font-size:14px;width:100%}.mat-icon-button[_ngcontent-%COMP%]{width:30px;height:30px}\"]\n  });\n  return DoctorSolicitanteComponent;\n})();\n\nfunction compareFn(v1, v2) {\n  return v1 && v2 ? v1.value === v2.value : v1 === v2;\n}","map":null,"metadata":{},"sourceType":"module"}