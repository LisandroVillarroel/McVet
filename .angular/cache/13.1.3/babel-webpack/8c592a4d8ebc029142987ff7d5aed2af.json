{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@app/servicios/examen.service\";\nimport * as i3 from \"@app/servicios/usuario.service\";\nimport * as i4 from \"@app/servicios/cliente.service\";\nimport * as i5 from \"@app/servicios/especie.service\";\nimport * as i6 from \"@app/servicios/raza.service\";\nimport * as i7 from \"@app/servicios/ficha.service\";\nexport let AgregaFichaComponent = /*#__PURE__*/(() => {\n  class AgregaFichaComponent {\n    constructor(dialogRef, data, examenService, usuarioService, clienteService, especieService, razaService, fichaService) {\n      this.dialogRef = dialogRef;\n      this.examenService = examenService;\n      this.usuarioService = usuarioService;\n      this.clienteService = clienteService;\n      this.especieService = especieService;\n      this.razaService = razaService;\n      this.fichaService = fichaService;\n      this.fechaActual = new Date();\n      this.datoSexo = [{\n        nombre: 'Hembra',\n        id: 'Hembra'\n      }, {\n        nombre: 'Macho',\n        id: 'Macho'\n      }];\n      this.hemograma = false;\n      this.idUsuario = new FormControl('', [Validators.required]);\n      this.idCliente = new FormControl('', [Validators.required]);\n      this.idExamen = new FormControl('', [Validators.required]);\n      this.nombrePropietario = new FormControl('', [Validators.required]);\n      this.nombrePaciente = new FormControl('', [Validators.required]);\n      this.idEspecie = new FormControl('', [Validators.required]);\n      this.idRaza = new FormControl('', [Validators.required]);\n      this.edad = new FormControl('', [Validators.required]);\n      this.sexo = new FormControl('', [Validators.required]);\n      this.idDocSolicitante = new FormControl('', [Validators.required]);\n      this.agregaCabeceraExamen = new FormGroup({\n        idUsuario: this.idUsuario,\n        idCliente: this.idCliente,\n        idExamen: this.idExamen,\n        nombrePropietario: this.nombrePropietario,\n        nombrePaciente: this.nombrePaciente,\n        idEspecie: this.idEspecie,\n        idRaza: this.idRaza,\n        edad: this.edad,\n        sexo: this.sexo,\n        idDocSolicitante: this.idDocSolicitante\n      });\n      this.usuario = data.usuario;\n      this.cargaCliente();\n      this.cargaExamen();\n      this.cargaUsuario();\n      this.cargaEspecie();\n      this.cargaRaza();\n    }\n\n    getErrorMessage(campo) {\n      if (campo === 'idUsuario') {\n        return this.idUsuario.hasError('required') ? 'Debes Seleccionar Usuario' : '';\n      }\n\n      if (campo === 'idCliente') {\n        return this.idCliente.hasError('required') ? 'Debes Seleccionar Cliente' : '';\n      }\n\n      if (campo === 'idExamen') {\n        return this.idExamen.hasError('required') ? 'Debes Seleccionar Exámen' : '';\n      }\n\n      if (campo === 'nombrePropietario') {\n        return this.nombrePropietario.hasError('required') ? 'Debes ingresar Nombre Propietario' : '';\n      }\n\n      if (campo === 'nombrePaciente') {\n        return this.nombrePaciente.hasError('required') ? 'Debes ingresar Nombre Paciente' : '';\n      }\n\n      if (campo === 'idEspecie') {\n        return this.idEspecie.hasError('required') ? 'Debes Seleccionar Especie' : '';\n      }\n\n      if (campo === 'idRaza') {\n        return this.idRaza.hasError('required') ? 'Debes Seleccionar Raza' : '';\n      }\n\n      if (campo === 'edad') {\n        return this.edad.hasError('required') ? 'Debes Ingresar Edad' : '';\n      }\n\n      if (campo === 'sexo') {\n        return this.sexo.hasError('required') ? 'Debes Seleccionar Sexo' : '';\n      }\n\n      if (campo === 'idDocSolicitante') {\n        return this.idDocSolicitante.hasError('required') ? 'Debes Ingresar Dr. Solicitante' : '';\n      }\n\n      return '';\n    }\n\n    ngOnInit() {}\n\n    cargaExamen() {\n      this.examenService.getDataExamen().subscribe(res => {\n        console.log('examen:', res['data']);\n        this.datoExamen = res['data'];\n      }, // console.log('yo:', res as PerfilI[]),\n      error => {\n        console.log('error carga:', error);\n        Swal.fire('ERROR INESPERADO', error, 'error');\n      }); // (this.dataSource.data = res as PerfilI[])\n    }\n\n    cargaUsuario() {\n      this.usuarioService.getDataUsuario().subscribe(res => {\n        console.log('usuario:', res['data']);\n        this.datoUsuario = res['data'];\n      }, // console.log('yo:', res as PerfilI[]),\n      error => {\n        console.log('error carga:', error);\n        Swal.fire('ERROR INESPERADO', error, 'error');\n      }); // (this.dataSource.data = res as PerfilI[])\n    }\n\n    cargaCliente() {\n      this.clienteService.getDataCliente().subscribe(res => {\n        console.log('cliente:', res['data']);\n        this.datoCliente = res['data'];\n      }, // console.log('yo:', res as PerfilI[]),\n      error => {\n        console.log('error carga:', error);\n        Swal.fire('ERROR INESPERADO', error, 'error');\n      }); // (this.dataSource.data = res as PerfilI[])\n    }\n\n    cargaEspecie() {\n      this.especieService.getDataEspecie().subscribe(res => {\n        console.log('especie:', res['data']);\n        this.datoEspecie = res['data'];\n      }, // console.log('yo:', res as PerfilI[]),\n      error => {\n        console.log('error carga:', error);\n        Swal.fire('ERROR INESPERADO', error, 'error');\n      }); // (this.dataSource.data = res as PerfilI[])\n    }\n\n    cargaRaza() {\n      this.razaService.getDataRaza().subscribe(res => {\n        console.log('raza:', res['data']);\n        this.datoRaza = res['data'];\n      }, // console.log('yo:', res as PerfilI[]),\n      error => {\n        console.log('error carga:', error);\n        Swal.fire('ERROR INESPERADO', error, 'error');\n      }); // (this.dataSource.data = res as PerfilI[])\n    }\n\n    seleccionaUsuario(p) {\n      return;\n    }\n\n    seleccionaExamen(p) {\n      if (p.nombre.toUpperCase() == \"HEMOGRAMA\") this.hemograma = true;\n      /*\r\n      console.log('datos examen selec:',p)\r\n      this.examen= {\r\n        idExamen:p._id,\r\n        codigoExamen: p.codigoExamen,\r\n        nombre: p.nombre\r\n      }\r\n      */\n\n      this.enviar();\n      return;\n    }\n\n    seleccionaCliente(p) {\n      /*\r\n      this.cliente= {\r\n        idCliente:p._id,\r\n        rutCliente: p.rutCliente,\r\n        razonSocial: p.razonSocial,\r\n        nombreFantasia: p.nombreFantasia\r\n      }\r\n      */\n      return;\n    }\n\n    enviar() {\n      console.log('examen:', this.agregaCabeceraExamen.get('idExamen').value.codigoExamen);\n      console.log('cliente:', this.agregaCabeceraExamen.get('idCliente').value);\n      this.examen = {\n        idExamen: this.agregaCabeceraExamen.get('idExamen').value._id,\n        codigoExamen: this.agregaCabeceraExamen.get('idExamen').value.codigoExamen,\n        nombre: this.agregaCabeceraExamen.get('idExamen').value.nombre\n      };\n      this.cliente = {\n        idCliente: this.agregaCabeceraExamen.get('idCliente').value._id,\n        rutCliente: this.agregaCabeceraExamen.get('idCliente').value.rutCliente,\n        razonSocial: this.agregaCabeceraExamen.get('idCliente').value.razonSocial,\n        nombreFantasia: this.agregaCabeceraExamen.get('idCliente').value.nombreFantasia\n      };\n      this.especie = {\n        idEspecie: this.agregaCabeceraExamen.get('idEspecie').value._id,\n        nombre: this.agregaCabeceraExamen.get('idEspecie').value.nombre.toUpperCase()\n      };\n      this.raza = {\n        idRaza: this.agregaCabeceraExamen.get('idRaza').value._id,\n        nombre: this.agregaCabeceraExamen.get('idRaza').value.nombre.toUpperCase()\n      };\n      /**\r\n          this.datoFicha = {\r\n                cliente: this.cliente,\r\n        nombrePropietario: this.agregaCabeceraExamen.get('nombrePropietario').value.toUpperCase(),\r\n        nombrePaciente: this.agregaCabeceraExamen.get('nombrePaciente').value.toUpperCase(),\r\n        edadPaciente: this.agregaCabeceraExamen.get('edad').value,\r\n        especie: this.especie,\r\n        raza: this.raza,\r\n        sexo: this.agregaCabeceraExamen.get('sexo').value.toUpperCase(),\r\n        doctorSolicitante: this.agregaCabeceraExamen.get('docSolicitante').value.toUpperCase(),\r\n        examen:this.examen,\r\n        telefono: null,\r\n        email: null,\r\n        usuarioCrea_id: this.usuario,\r\n        usuarioModifica_id: this.usuario,\r\n                };\r\n      */\n      /// console.log('agrega 1:', this.datoFicha);\n\n      /*\r\n        this.fichaService.postDataFicha(this.datoFicha)\r\n        .subscribe(\r\n          dato => {\r\n            console.log('respuesta:', dato.codigo);\r\n            if (dato.codigo === 200) {\r\n                Swal.fire(\r\n                'Se agregó con Éxito',\r\n                'Click en Botón!',\r\n                'success'\r\n              ); // ,\r\n                this.dialogRef.close(1);\r\n            }else{\r\n              Swal.fire(\r\n                dato.mensaje,\r\n                'Click en Boton!',\r\n                'error'\r\n              );\r\n              this.dialogRef.close(1);\r\n            }\r\n          }\r\n        );\r\n      */\n    } // Error handling\n\n\n    cerrar() {// this.dialogRef.close();\n    }\n\n  }\n\n  AgregaFichaComponent.ɵfac = function AgregaFichaComponent_Factory(t) {\n    return new (t || AgregaFichaComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i2.ExamenService), i0.ɵɵdirectiveInject(i3.UsuarioService), i0.ɵɵdirectiveInject(i4.ClienteService), i0.ɵɵdirectiveInject(i5.EspecieService), i0.ɵɵdirectiveInject(i6.RazaService), i0.ɵɵdirectiveInject(i7.FichaService));\n  };\n\n  AgregaFichaComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AgregaFichaComponent,\n    selectors: [[\"app-agrega-ficha\"]],\n    decls: 2,\n    vars: 0,\n    template: function AgregaFichaComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"agrega-ficha works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\".agrega-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;padding:0 10%}.agrega-container[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{width:95%}.mat-form-field[_ngcontent-%COMP%]{display:block!important}input[_ngcontent-%COMP%]{width:95%}.colorFondoBoton[_ngcontent-%COMP%]{color:#fff;background-color:#000}.mat-raised-button[_ngcontent-%COMP%]{min-width:100%}.mat-dialog-container[_ngcontent-%COMP%]{padding:50px!important}.mat-dialog-content[_ngcontent-%COMP%]{margin:auto}.lineaCuadrada[_ngcontent-%COMP%]{border-style:solid;border-width:1px;border-color:#000}.lineaDerecha[_ngcontent-%COMP%]{border-right:solid;border-width:1px;border-color:#000}.lineaIzquierda[_ngcontent-%COMP%]{border-left:solid;border-width:1px;border-color:#000}.lineaInferior[_ngcontent-%COMP%]{border-bottom:solid;border-width:1px;border-color:#000}\"]\n  });\n  return AgregaFichaComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}