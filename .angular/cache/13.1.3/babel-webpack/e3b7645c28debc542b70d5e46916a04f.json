{"ast":null,"code":"import { MatSidenav } from '@angular/material/sidenav';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/layout\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./autentica/_services\";\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(observer, router, authenticationService) {\n      this.observer = observer;\n      this.router = router;\n      this.authenticationService = authenticationService;\n      this.authenticationService.currentUsuario.subscribe(x => this.currentUsuario = x);\n    }\n    /*\r\n        ngAfterViewInit() {\r\n          this.observer\r\n            .observe(['(max-width: 1800px)'])\r\n            .pipe(delay(1))\r\n            .subscribe((res) => {\r\n              if (res.matches) {\r\n                this.sidenav.mode = 'over';\r\n                this.sidenav.close();\r\n              } else {\r\n                this.sidenav.mode = 'side';\r\n                this.sidenav.open();\r\n              }\r\n            });\r\n        }\r\n    */\n\n\n    ngOnInit() {\n      //  if (JSON.parse(localStorage.getItem('currentUsuario')) != null) {\n      //   this.currentUsuario.usuarioDato = JSON.parse(localStorage.getItem('currentUsuario')) || [];\n      //   console.log('1: ', this.currentUsuario.usuarioDato);\n      console.log('0: ', this.authenticationService.getCurrentUser());\n\n      if (this.authenticationService.getCurrentUser() != null) {\n        this.currentUsuario.usuarioDato = this.authenticationService.getCurrentUser();\n      }\n    }\n\n    logout() {\n      this.authenticationService.logout();\n      this.router.navigate(['/login']);\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.BreakpointObserver), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthenticationService));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app\"]],\n    viewQuery: function AppComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatSidenav, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sidenav = _t.first);\n      }\n    },\n    decls: 0,\n    vars: 0,\n    template: function AppComponent_Template(rf, ctx) {},\n    styles: [\"\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}