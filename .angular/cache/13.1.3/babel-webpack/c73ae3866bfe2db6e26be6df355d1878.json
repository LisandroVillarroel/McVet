{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { NavigationEnd } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport let MenuService = /*#__PURE__*/(() => {\n  class MenuService {\n    constructor(router) {\n      this.router = router;\n      this.currentUrl = new BehaviorSubject(undefined);\n      this.headers = new HttpHeaders({\n        /*  Authorization: this.authenticationService.getToken()*/\n      });\n      this.headersPerfil = new HttpHeaders({\n        \"auth-key\": \"mJ9NH2gRPf88ziYEtbEzZOIQKW7WpqtzCwLWXONt\"\n      });\n      this.router.events.subscribe(event => {\n        if (event instanceof NavigationEnd) {\n          this.currentUrl.next(event.urlAfterRedirects);\n        }\n      });\n    }\n\n    closeNav() {\n      this.appDrawer.close();\n    }\n\n    openNav() {\n      this.appDrawer.open();\n    }\n\n  }\n\n  MenuService.ɵfac = function MenuService_Factory(t) {\n    return new (t || MenuService)(i0.ɵɵinject(i1.Router));\n  };\n\n  MenuService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MenuService,\n    factory: MenuService.ɵfac\n  });\n  return MenuService;\n})();","map":null,"metadata":{},"sourceType":"module"}