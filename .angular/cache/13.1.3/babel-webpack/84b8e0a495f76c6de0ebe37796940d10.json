{"ast":null,"code":"import { environment } from '@environments/environment';\nimport { HttpHeaders } from '@angular/common/http';\nimport { throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./../autentica/_services\";\nexport let UsuarioService = /*#__PURE__*/(() => {\n  class UsuarioService {\n    constructor(http, authenticationService) {\n      this.http = http;\n      this.authenticationService = authenticationService;\n      this.headers = new HttpHeaders({\n        'Content-Type': 'application/json',\n        Authorization: this.authenticationService.getToken()\n      });\n    } // getDataPerfil() {\n    //  return this.perfilServ;\n    // }\n\n\n    getDataUsuario() {\n      return this.http.get(`${environment.apiUrl}/usuarioTodo`, {\n        headers: this.headers\n      }).pipe(retry(1), catchError(this.errorHandl));\n    }\n\n    errorHandl(error) {\n      console.log('paso error: ', error);\n      let errorMessage = '';\n\n      if (error.error instanceof ErrorEvent) {\n        // Get client-side error\n        errorMessage = error.error.message;\n      } else {\n        // Get server-side error\n        errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n      }\n\n      console.log('mio: ', errorMessage);\n      Swal.fire('ERROR INESPERADO', errorMessage, 'error');\n      return throwError(errorMessage);\n    }\n\n  }\n\n  UsuarioService.ɵfac = function UsuarioService_Factory(t) {\n    return new (t || UsuarioService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthenticationService));\n  };\n\n  UsuarioService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UsuarioService,\n    factory: UsuarioService.ɵfac,\n    providedIn: 'root'\n  });\n  return UsuarioService;\n})();","map":null,"metadata":{},"sourceType":"module"}